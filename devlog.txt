
next: resizing the window should resize the canvas

after get the camera to work, will probably have to redo the resizing code



later:
camera: follows character, and at a better angle/position
dialog/text (look at some threejsfundamentals articles including this one https://threejsfundamentals.org/threejs/lessons/threejs-align-html-elements-to-3d.html )
maybe try to  make some fireflies or a little fire
ooo myabe some stars
trees?
resize canvas on window resize https://threejsfundamentals.org/threejs/lessons/threejs-responsive.html
multiplayer
better ground texture with render target? https://threejsfundamentals.org/threejs/lessons/threejs-rendertargets.html
VCR/CRT effect like from https://twitter.com/puppet_sunsun/status/1417860643890208768?s=20
maybe can play with 'exposure' to simulate your eyes adjusting to the dark (like when the player is close to the fire, everything else is dark). this seems like a very helpful example: https://threejs.org/examples/#webgl_lights_physical

# 7/28

getting window resizing to work

i think i need an event listener on window resizing?


# 7/23

ok no more light tweaking for now, let's work on something else

maybe it's time to implement canvas window resize

what was i excited about the other day? oh yeah being able to interact with different objects and craft things
smoking cigarettes - the butts dont go away
making drugs from tree sap
someone to welcome you - some jawa type looking person with a hood
text chat a la runescape or likelik2d
dust particles that you have to sweep away
minimal or no HUD

yeah maybe what i want to do next is just get it online. i think that'll shape what it becomes going forward

first lets fix window resizing
and a first try at camera behavior

and then we'll get it up live
maybe multiplayer????? maaaaaaybe

a passage from the bible: https://threejsfundamentals.org/threejs/lessons/threejs-responsive.html

i think what we ultimately want is no matter what the size of the window, or if the user resizes etc, the camera is centered on the player. (or somewhat-centered, maybe its centered on the middle of the camera bounds)



# 7/22

i think more light tweaking lol this takes forever

ok i think i got it to where i want it. time to do something else

do i want to make content now.... yeah i think lets go for a small story now and that can guide the next features that i make

# 7/21

i'll spend a little more time tweaking the lights... but i'm preeety happy with them??

# 7/20

going to keep trying to make these lights look nice

lower light

ok the new mystery is why does the point light cast more light when its farther away?
maybe the params i'm using are weird
or maybe the ground plane is werid bc of my texture?/ i dont think so though..

oh hm so maybe using lambert with big objects does'nt really work https://stackoverflow.com/questions/22204264/three-js-point-light-not-working-with-large-meshes

whatever man, i'll just switch to phong and turn the shininess off

yeah i think that looks better

# 7/19

yay i got bloom working. now let's actually try to make the lighting look good. my first instinct is to make a Lamp object that has some bloom effect but also a point light that lights things around it

i'm realizing now that irl, you only get this bloom effect off lights in low lighting (i.e. nighttime or dusk). so unless i want to create a whole day-night cycle, i guess i'm just simulating perpetual twilight


# 7/14

so i copypasted what i think is the right code from that example](https://github.com/mrdoob/three.js/blob/master/examples/webgl_postprocessing_unreal_bloom_selective.html)

but now i'm just getting this pure 0xff0000 red screen. maybe i should've done it in parts, at least more piece-wise than i did. after a couple hours of debugging i'm pretty burnt out. first thing i did today was post on the threejs discord asking for help, and now i'll get back into it.

i don't think it's something with the glsl bc i triple-checked the shaders and then tried modifying to see if anything changed... i googled "red screen threejs" etc. and haven't found anything

i wish there was a way to break up the postprocessing code... maybe there is but i don't understand it enough. maybe that's what i should try next

well i found at least one bug! it matters what order you add postprocessing passes to the effect composer. for my bloomComposer, i think i was rendering to the screen before doing the bloom pass

mmm still all red though...

i wonder if i can get just the sphere thing to render. so only the bloom pass?

oh yeah i got that. so i understand how that bit works i guesss..

turns out i was missing a couple of brackets and so i wasn't passing in my shaders as the `vertexShader` or `fragmentShader` arguments for the ShaderMaterial... there goes 3 hours of my life :)

ooo it works

# 7/12

ok lets try to implement this now



# 7/7

where were we
selective bloom

open source is nice: https://discourse.threejs.org/t/whats-the-easiest-recommended-way-to-create-glow-layers/4897/4

ok after reading that i still don't really understand what's going on

alright time to break out the ol notebook and start diagraming

i wonder if darkenning like they do in the example will work for me? might have to do something else to hide it?

we do need layers because that's how darkenNonBloomed() knows what to darken

so we need to traverse the entire scene tree every frame? there's probably a way to keep track of only the objs we bloom or something.. mm maybe not though

# 6/30

yeah the unreal bloom is much better 

# 6/29

for some reason the bloom pass by itself won't render to the screen?

that youtube video that i saw before with the sun - was it blooming the whole scene or just the sun? i think it was just the sun

o so there's an unrealbloompass too

# 6/28

so lighting is harder than i thought.


the point light is good for the effect of the lamp on other obejctrs in the scene, but i need to be able to actually see the lamp

this video talks about using EffectComposer https://www.youtube.com/watch?v=d0C_bxzG850
o maybe what i want to read about is postprocessing in general...
oh yeah what i want is bloom
they got that unreal bloom.... okay cooool


# 6/23

lets see if we can make her stand when she's not moving and also turn in the direction she's walking

we're just gonna do some simple texturing right quick by manually drwaing something in aseprite. i just want it to be something that's not a blank expanse

yeah i mean it's meh. you can tell it's a repeated texture. i really do want to do procedurally generated ground pixels. but not yet

hm the lighting is weirder than i thought. they're invisible except for thow they affect the environment. this might be a thing

# 6/22

ok lets see if i can click to move

hell yeha got the raycaster working

ok now i need to make her walk there.
i think first i'll teleport her
then do interpolation
then get it so that she idles when she's not moving, and does the walking anim when she is
and then maybe refactor the Person class to do this nicely using anim tags from aseprite

so the built in three js vector3 lerp has a param that is like the percentage between the origin and the target... i dont think thats super useful to me bc i want the walk speed to be the same, no matter the distance

what i want is like the direction between current location and target
and then every frame move greta <walkSpeed> in that direction
yeah ane maybe there can be some acceleration at the beginning and end if i'm fancy but nahhhh

i got some cool vibrating glitch effects that i'd love to try to do on purpose later. but it basically works! still dont have her idling when she's not moving, but im gonna eat lunch

# 6/18

getting this ground textured is turning out to be harder than i thought and i'm tired of it so i'm going to try to do something else next. i want to be able to click somewhere, and the character will walk there. like runescape

# 6/16

ok the lots-of-little-planes was too slow. i guess there might still be a way to make it work... if we preload it? or look into why its so slow to create the geometries. or just figure out a way to wait on the load without making the browser totally unresponsive

but i kind of want to try doing it in shaders anyway. going to be using ShaderMaterial and this threejsfundamentals article: https://threejsfundamentals.org/threejs/lessons/threejs-shadertoy

i'm looking at one of the examples from the ShaderMaterial docs and realizing that it would be nice to just be able to click and drag to rotate the cam. i'm going to try to add that quickly. maybe its using a lib or something

well that took a lot more work than i thought it would. turns out es6/typescript requires modules to be made ready for it or something

i think i'll get a GUI for some sliders while i'm at it

# 6/15

going to do walking animation now

got the ground plane working woo

now i want to make it like a pixelated texture to signify grass

maybe a render target?
https://threejsfundamentals.org/threejs/lessons/threejs-rendertargets.html

but using shadermaterial is probably the more performant/correct way, i'll try that first
https://threejsfundamentals.org/threejs/lessons/threejs-shadertoy.html

in the shower i thought of an idea of just using a ton of tiny planes. i wonder if this would work and not make things crash etc.

one thing i could do is to handraw the pixel texture, but actually i want to procgen it. i think that's important

i tried the tons of tiny planes and it's too slow!!! no! but also woo!!! exilirating. i guess it's time to try the GPU shader method next

# 6/14

omg there's a threejsfundamentals hahaha
https://threejsfundamentals.org/

i dont think i'm going to pour over this and go step-by-step like i did for webgl. but there is this article on transparency that i stumbled upon that i think will help
https://threejsfundamentals.org/threejs/lessons/threejs-transparency.html

i dont think i want directional lighting, or at least not that realistic effect that i'm getting from this phong material. i think i do want flat lighting. but i also want to get some effect from point lights
maybe the demo i should strive for is:
a character or two walking around
the ground has that pixel texture
pixelart/dynamic lighting fire ... and/or pixelart/dynamic lighting fireflies and/or pixelart/dynamic lighting lampposts
these are all different lights moods. or are they?

well i did the thing anyway where i read through the threejsfundamentals intro. i did learn a couple things, like that you can pass a canvas into WebGLRenderer which is nice

i got the plane to be transparent, which is sick. next i should animate the walk cycle, or start getting a ground in.

# 6/13

<p> i am very hungover. this is my first devlog on this project, which i started about a month ago. the first 2-3 weeks were really just me learning webgl and then i took a week break. i've been cleaning my appt. at the same time which i think has been informing my design interests a little.</p>

<p> i've gotten to a point where i'm realizing writing all the low level webgl stuff myself in vanilla js is maybe needlessly sadistic. i finally got a perspective view working, but my sprite is flipped upside down, and i know it has something to do with a quirk of the matrix math but i dont really care anymore.</p>

<p> i was kind of expecting to hit this point. i wish i got a little further, like implementing basic lighting and procgen textures. and i'm still not sure if i can get the visual effect that i want with using an engine/library. but if i can, it would probably make the process more enjoyable. so that's what i'm going to do now: explore some tools
<p> <a href="https://webglfundamentals.org/webgl/lessons/webgl-2d-vs-3d-library.html">this post</a> from webglfundamentals makes me think i should use threes.js</p>

<p>yeah looks like three.js is the ticket. going to try to do what i want to do with threejs now. i'm a little worried that it wont let me do weird shader stuff... but im sure it has support for that right?</p>


